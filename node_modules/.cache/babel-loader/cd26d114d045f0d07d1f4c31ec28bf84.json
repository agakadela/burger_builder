{"ast":null,"code":"import _defineProperty from \"/Users/macbook/Documents/contiGO/PROJEKTY/PROGRAMOWANIE/REACT_en/MYCODE/my-code/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/macbook/Documents/contiGO/PROJEKTY/PROGRAMOWANIE/REACT_en/MYCODE/my-code/src/containters/BurgerBuilder/BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchaseable: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchaseable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad:true, meat: false} etc\n\n\n    return React.createElement(React.Fragment, null, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchaseable: this.state.purchaseable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/macbook/Documents/contiGO/PROJEKTY/PROGRAMOWANIE/REACT_en/MYCODE/my-code/src/containters/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Modal","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 4,\n    purchaseable: false\n  };\n\n  updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    this.setState({\n      purchaseable: sum > 0\n    });\n  };\n\n  addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({\n      totalPrice: newPrice,\n      ingredients: updatedIngredients\n    });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceAddition;\n    this.setState({\n      totalPrice: newPrice,\n      ingredients: updatedIngredients\n    });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    // {salad:true, meat: false} etc\n    return (\n      <>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled={disabledInfo}\n          price={this.state.totalPrice}\n          purchaseable={this.state.purchaseable}\n        />\n      </>\n    );\n  }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}