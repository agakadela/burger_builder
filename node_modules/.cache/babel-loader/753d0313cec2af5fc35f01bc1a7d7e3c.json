{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/contiGO/PROJEKTY/PROGRAMOWANIE/REACT_en/MYCODE/my-code/src/containers/HOC/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"../../../components/UI/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.reqInterceptor = axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error\n        });\n      });\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n    }\n\n    render() {\n      return React.createElement(React.Fragment, null, React.createElement(Modal, {\n        show: this.state.error,\n        modalClosed: this.errorConfirmedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.error ? this.state.error.message : null), React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/Users/macbook/Documents/contiGO/PROJEKTY/PROGRAMOWANIE/REACT_en/MYCODE/my-code/src/containers/HOC/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Modal","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentWillMount","reqInterceptor","interceptors","request","use","req","response","res","componentWillUnmount","eject","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oCAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAAA;;AACpD,iBAAO,cAAcJ,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC7BK,KAD6B,GACrB;AACNC,QAAAA,KAAK,EAAE;AADD,OADqB;;AAAA,WAuB7BC,qBAvB6B,GAuBL,MAAM;AAC5B,aAAKC,QAAL,CAAc;AACZF,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OA3B4B;AAAA;;AAI7BG,IAAAA,kBAAkB,GAAG;AACnB,WAAKC,cAAL,GAAsBN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,GAAG,IAAI;AAC1D,aAAKN,QAAL,CAAc;AACZF,UAAAA,KAAK,EAAE;AADK,SAAd;AAGA,eAAOQ,GAAP;AACD,OALqB,CAAtB;AAMA,WAAKJ,cAAL,GAAsBN,KAAK,CAACO,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CACpBG,GAAG,IAAIA,GADa,EAEpBV,KAAK,IAAI;AACP,aAAKE,QAAL,CAAc;AACZF,UAAAA;AADY,SAAd;AAGD,OANmB,CAAtB;AAQD;;AACDW,IAAAA,oBAAoB,GAAG;AACrBb,MAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BM,KAA3B,CAAiC,KAAKR,cAAtC;AACD;;AAMDS,IAAAA,MAAM,GAAG;AACP,aACE,0CACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,KADnB;AAEE,QAAA,WAAW,EAAE,KAAKC,qBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBc,OAApC,GAA8C,IAJjD,CADF,EAOE,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,CADF;AAWD;;AAxC4B,GAA/B;AA0CD,CA3CD;;AA6CA,eAAenB,gBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"../../../components/UI/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      error: null\n    };\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.reqInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({\n            error\n          });\n        }\n      );\n    }\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n    }\n    errorConfirmedHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n    render() {\n      return (\n        <>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n"]},"metadata":{},"sourceType":"module"}